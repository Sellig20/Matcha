services: 

  back-end:
    build: 
      context: backend
    container_name: back-end
    working_dir: /usr/src/app
    networks:
      - node-network
    volumes: 
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    tty: true
    ports: 
      - "${EXPRESS_PORT}:${EXPRESS_PORT}"
    environment:
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOSTNAME: ${POSTGRES_HOSTNAME}
      POSTGRES_NAME: ${POSTGRES_NAME}
      EXPRESS_PORT: ${EXPRESS_PORT}
      JWT_SECRET: ${JWT_SECRET}
    command: npm run dev
    depends_on:
       - db

  front-end:
    build: 
      context: frontend
    container_name: front-end
    working_dir: /usr/src/app
    networks: 
      - node-network
    volumes: 
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    tty: true
    ports: 
      - "${REACT_PORT}:${REACT_PORT}"
    command: npm run dev

  db:
    image: postgres
    container_name: db
    restart: always
    tty: true
    volumes:
      - ./data:/var/lib/postgresql/data
    environment: 
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOSTNAME: ${POSTGRES_HOSTNAME}
    ports: 
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks: 
      - node-network

  nginx:
    build: 
      context: nginx
    container_name: nginx
    restart: always
    tty: true
    ports: 
      - "${NGINX_PORT}:${NGINX_PORT}"
    networks: 
      - node-network
    depends_on:
       - db
       - back-end
       - front-end
  
networks: 
  node-network:
    driver: bridge