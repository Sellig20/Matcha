# version: '3.9'

volumes: 
  data:

services: 

  db:
    image: postgres
    container_name: db
    restart: always
    tty: true
    volumes:
      - ./data/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./data/insertdata.sql:/docker-entrypoint-initdb.d/insertdata.sql
    environment: 
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports: 
      - "5432:5432"
    networks: 
      - node-network

  back-end:
    depends_on:
        db:
          condition: service_started
    networks: 
      - node-network
    build: 
      context: backend
    container_name: back-end
    working_dir: /usr/src/app
    env_file:
      - .env
    volumes: 
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    tty: true
    ports: 
      - "3000:3000"
    command: npm run start

  front-end:
    depends_on:
      db:
        condition: service_started
    networks: 
      - node-network
    build: 
      context: frontend
    container_name: front-end
    working_dir: /usr/src/app
    volumes: 
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    tty: true
    ports: 
      - "3001:3001"
    command: npm run dev

  nginx:
    build: 
      context: nginx
    container_name: nginx
    restart: always
    tty: true
    ports: 
      - "8000:80"
    networks: 
      - node-network
    depends_on:
       - db
       - back-end
       - front-end
  
networks: 
  node-network:
    driver: bridge